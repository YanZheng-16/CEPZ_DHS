clear
load('C.mat')
data=X;
load(['D:\pseKNC\DHS\indices.mat'])
label=[ones(280,1);zeros(737,1)];
N=500; %树的数量
total=zeros(5,4);
for k=1:5
%%五折
%     indices = crossvalind('Kfold',label,5); %5为交叉验证折数
    test = (indices == k);  %获得test集元素在数据集中对应的单元编号
    train = ~test;  %train集元素的编号为非test元素的编号
    train_data=data(train,:);   %从数据集中划分出train样本的数据
    train_label=label(train,:);   %获得样本集的测试目标，在本例中是实际分类情况
    test_data=data(test,:); %test样本集
    test_label=label(test,:);
    
    B = TreeBagger(N,train_data,train_label,'OOBPrediction','On',...
        'Method','classification');
    predict_label = predict(B,test_data);
    predict_label=transpose(str2num(cell2mat(predict_label)));
    predict_label=predict_label';
    predict_label(predict_label>0.5)=1;
    predict_label(predict_label<=0.5)=0;
%     acc = length(find(predict_label == test_label))/length(test_label)*100;
%%检验
%[Sn Sp Acc MCC]
m=size(test_data);
% predict_label=transpose(str2num(cell2mat(predict_label)));
% predict_label=predict_label';
per=[test_label predict_label];
TP=0;FN=0;FP=0;TN=0;
for i=1:m
    if per(i,:)==[1 1]
        TP=TP+1;end
    if per(i,:)==[1 0]
        FN=FN+1;end
    if per(i,:)==[0 1]
        FP=FP+1;end
    if per(i,:)==[0 0]
        TN=TN+1;end
end
Sn=TP/(TP+FN);
Sp=TN/(TN+FP);
Acc=(TP+TN)/(TP+TN+FP+FN);
MCC=(TP*TN-FP*FN)/sqrt((TP+FP)*(TP+FN)*(TN+FP)*(TN+FN));
total(k,1)=Sn;
total(k,2)=Sp;
total(k,3)=Acc;
total(k,4)=MCC;
end
mean(total,1); %[ Sn,Sp,Acc,MCC ]
